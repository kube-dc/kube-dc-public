kubeApiExternalUrl: {{ printf "kube-api.%s:6443" .variables.domain }}

manager:
  logLevel: 5 # - Debug
  keycloakDebug: false

  ovnDbIps: "{{ output "this.list-master-nodes.ovn_db_endpoints_list" }}"

  image:
    pullPolicy: Always

  kubernetesAuthConfig:
    path: /etc/rancher
    filename: auth-conf.yaml

  keycloakSecret:
    url: "https://{{ .variables.cluster_config.keycloak_hostname | default ( printf "login.%s" .variables.domain ) }}"
    user: {{ .variables.cluster_config.keycloak_user | default "admin" }} 
    password: {{ output "this.keycloak-pass-generator.password" }}
    masterRealm: master
    consoleUrl: https://{{ printf "console.%s" .variables.domain }}

  nodeSelector:
    kube-dc-manager: "true"
  
  {{- if .variables.cluster_config.default_gw_network_type }}
  defaultGwNetworkType: {{ .variables.cluster_config.default_gw_network_type }}
  {{- end }}
  {{- if .variables.cluster_config.default_eip_network_type }}
  defaultEipNetworkType: {{ .variables.cluster_config.default_eip_network_type }}
  {{- end }}
  {{- if .variables.cluster_config.default_fip_network_type }}
  defaultFipNetworkType: {{ .variables.cluster_config.default_fip_network_type }}
  {{- end }}
  {{- if .variables.cluster_config.default_svc_lb_network_type }}
  defaultSvcLbNetworkType: {{ .variables.cluster_config.default_svc_lb_network_type }}
  {{- end }}

frontend:
  replicaCount: 1
  service:
    type: ClusterIP
    port: 8080
  livenessProbe:
    httpGet:
      path: /
      port: 80
    timeoutSeconds: 5
    periodSeconds: 10
    failureThreshold: 3
  readinessProbe:
    httpGet:
      path: /
      port: 80
    timeoutSeconds: 5
    periodSeconds: 10
    failureThreshold: 3
  ingress:
    annotations:
      kubernetes.io/ingress.class: "nginx"  # specify the class, redundant if ingressClassName is used and recognized
      cert-manager.io/cluster-issuer: "letsencrypt-prod-http"  # specify the cert-manager issuer
    host: {{ printf "console.%s" .variables.domain }}
    className: nginx
    tls:
      enabled: true
      secretName: kube-dc-frontend-tls

backend:
  keycloakUrl: "{{ .variables.cluster_config.keycloak_hostname | default ( printf "login.%s" .variables.domain ) }}"
  replicaCount: 1
  service:
    type: ClusterIP
    port: 8080
  livenessProbe:
    httpGet:
      path: /
      port: 3333
    timeoutSeconds: 5
    periodSeconds: 10
    failureThreshold: 3
  readinessProbe:
    httpGet:
      path: /
      port: 3333
    timeoutSeconds: 5
    periodSeconds: 10
    failureThreshold: 3
  ingress:
    enabled: true
    className: nginx
    annotations:
      kubernetes.io/ingress.class: "nginx"  # specify the class, redundant if ingressClassName is used and recognized
      cert-manager.io/cluster-issuer: "letsencrypt-prod-http"  # specify the cert-manager issuer
    host: {{ printf "backend.%s" .variables.domain }}
    tls:
      enabled: true
      secretName: kube-dc-backend-tls


