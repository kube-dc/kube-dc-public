global:
  security:
    allowInsecureImages: true

extraEnvVars:
  - name: KC_FEATURES
    value: "preview,organization"

image:
  registry: docker.io
  repository: bitnamilegacy/keycloak
  tag: 26.0.7-debian-12-r0

auth:
  adminUser: {{ .variables.cluster_config.keycloak_user | default "admin" }} 
  adminPassword: {{ output "this.keycloak-pass-generator.password" }}
  existingSecret: ""
  passwordSecretKey: ""

service:
  type: ClusterIP
  http:
    enabled: true

ingress:
  enabled: true
  ingressClassName: nginx  # assuming you're using the Nginx Ingress controller
  hostname: {{ .variables.cluster_config.keycloak_hostname | default ( printf "login.%s" .variables.domain ) }}
  hostnameStrict: true
  path: /  # Using root path, adjust if Keycloak is served under a subpath
  pathType: Prefix  # "Prefix" matches the beginning of the URL path
  servicePort: http  # Set to 'https' if Keycloak behind the ingress is listening on HTTPS
  annotations:
    kubernetes.io/ingress.class: "nginx"  # specify the class, redundant if ingressClassName is used and recognized
    cert-manager.io/cluster-issuer: "letsencrypt-prod-http"  # specify the cert-manager issuer
  tls: true  # Enable TLS
  secrets: []  # Managed by cert-manager, no need to manually specify unless using custom certificates

production: true

## HTTPS settings
## ref: https://github.com/bitnami/containers/tree/main/bitnami/keycloak#tls-encryption
##
tls:
  ## @param tls.enabled Enable TLS encryption. Required for HTTPs traffic.
  ##
  enabled: true
  ## @param tls.autoGenerated Generate automatically self-signed TLS certificates. Currently only supports PEM certificates
  ##
  autoGenerated: true

# This option to allow work in no-production mode would be replaced by
# https://www.keycloak.org/server/all-config#category-proxy
# proxy-headers: forwarded
# proxy: edge 

logging:
  output: default
  level: INFO

# Reduce resource requests for single-node installer
resources:
  requests:
    cpu: 250m
    memory: 512Mi

# Override PostgreSQL to use bitnamilegacy images
postgresql:
  enabled: true
  image:
    registry: docker.io
    repository: bitnamilegacy/postgresql
    tag: 17.2.0-debian-12-r2
  primary:
    resources:
      requests:
        cpu: 250m
        memory: 256Mi