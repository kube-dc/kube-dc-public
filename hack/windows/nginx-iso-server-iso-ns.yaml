apiVersion: apps/v1
kind: Deployment
metadata:
  name: iso-server
  namespace: iso
  labels:
    app: iso-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: iso-server
  template:
    metadata:
      labels:
        app: iso-server
    spec:
      containers:
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: iso-storage
          mountPath: /usr/share/nginx/html
          readOnly: true
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
      volumes:
      - name: iso-storage
        persistentVolumeClaim:
          claimName: iso-storage
      - name: nginx-config
        configMap:
          name: nginx-iso-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-iso-config
  namespace: iso
data:
  default.conf: |
    server {
        listen 80;
        server_name _;
        root /usr/share/nginx/html;
        index index.html;
        
        # Enable directory listing for browsing
        autoindex on;
        autoindex_exact_size off;
        autoindex_localtime on;
        
        # Set proper MIME type for ISO files
        location ~* \.iso$ {
            add_header Content-Type application/octet-stream;
            add_header Content-Disposition 'attachment';
        }
        
        # Enable range requests for large files
        location / {
            try_files $uri $uri/ =404;
            
            # Cache headers for ISO files
            location ~* \.iso$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: iso-server
  namespace: iso
  labels:
    app: iso-server
spec:
  selector:
    app: iso-server
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
  type: ClusterIP
