---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.4
  name: fips.kube-dc.com
spec:
  group: kube-dc.com
  names:
    kind: FIp
    listKind: FIpList
    plural: fips
    singular: fip
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.resolvedTargetIP
      name: Target IP
      type: string
    - jsonPath: .status.externalIP
      name: External IP
      type: string
    - jsonPath: .status.targetVMInterface.vmName
      name: VM
      type: string
    - jsonPath: .status.targetVMInterface.interfaceName
      name: Interface
      type: string
    - jsonPath: .status.ready
      name: Ready
      type: boolean
    name: v1
    schema:
      openAPIV3Schema:
        description: FIp is the Schema for the fips API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: FIpSpec defines the desired state of FIp.
            properties:
              eip:
                type: string
              externalNetworkType:
                description: |-
                  ExternalNetworkType specifies the type of external network for this floating IP.
                  Options:
                  - "public": The FIP will be allocated from the public IP pool.
                     - The assigned IP will be accessible from the public internet (subject to firewall rules).
                     - Use this for workloads that require direct internet access.
                  - "cloud": The FIP will be allocated from the internal cloud IP pool.
                     - The assigned IP will NOT be accessible from the public internet, but can be used for communication between projects within the cloud.
                     - Use this for internal workloads that do not require public exposure.
                enum:
                - public
                - cloud
                type: string
                x-kubernetes-validations:
                - message: externalNetworkType is immutable
                  rule: self == oldSelf
              ipAddress:
                description: Target IP address for direct IP targeting
                type: string
              vmTarget:
                description: Target VM interface for VM-based targeting
                properties:
                  interfaceName:
                    description: InterfaceName is the name of the network interface
                      on the VM (optional, defaults to first interface)
                    type: string
                  vmName:
                    description: VMName is the name of the VirtualMachine or VirtualMachineInstance
                      in the same namespace
                    type: string
                required:
                - vmName
                type: object
            type: object
            x-kubernetes-validations:
            - message: eip and externalNetworkType cannot be set at the same time
              rule: '(has(self.eip) && self.eip != "") ? !has(self.externalNetworkType)
                || self.externalNetworkType == "" : true'
            - message: ipAddress and vmTarget cannot be set at the same time
              rule: '(has(self.ipAddress) && self.ipAddress != "") ? !has(self.vmTarget)
                : true'
            - message: either ipAddress or vmTarget must be specified
              rule: has(self.ipAddress) || has(self.vmTarget)
          status:
            description: FIpStatus defines the observed state of FIp.
            properties:
              conditions:
                description: Conditions represents the latest available observations
                  of the FIp's current state
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              eip:
                description: EIp is the reference to the external IP resource associated
                  with this floating IP
                type: string
              externalIP:
                description: ExternalIP is the allocated external IP address for this
                  floating IP
                type: string
              ovnFip:
                description: OvnFip is the reference to the OVN floating IP resource
                type: string
              ready:
                default: false
                description: Ready indicates whether the floating IP is properly configured
                  and usable
                type: boolean
              resolvedTargetIP:
                description: ResolvedTargetIP is the actual internal IP address being
                  targeted (resolved from VM interface if vmTarget is used)
                type: string
              targetVMInterface:
                description: TargetVMInterface contains information about the resolved
                  VM interface (when vmTarget is used)
                properties:
                  interfaceName:
                    description: InterfaceName is the resolved interface name
                    type: string
                  ipAddress:
                    description: IPAddress is the current IP address of the interface
                    type: string
                  mac:
                    description: MAC is the MAC address of the interface
                    type: string
                  vmName:
                    description: VMName is the resolved VM name
                    type: string
                required:
                - interfaceName
                - ipAddress
                - vmName
                type: object
            required:
            - eip
            - externalIP
            - ovnFip
            - ready
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
